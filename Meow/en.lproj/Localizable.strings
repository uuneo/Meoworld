/* 
  Localizable.strings
  Meow

  Created by He Cho on 2024/8/8.
  
*/



timeJustNow = "Just now";
timeMinAgo = "%1$dm ago";
timeHourAgo = "%1$dh ago";
timeMinHourAgo = "%1$dh %2$dm ago";


bottomBarSettings = "Settings";
bottomBarMsg = "Chat";

bottomBarExample = "Example";



unknown = "Unknown";

showImage = "Show Image";
displayImage = "Hide Image";

typechanged = "Message status changed";
allRead = "All read";
registerPush = "Register device push";

checkimge = "Checking";
controlSuccess = "Operation successful";
register = "Register";
againRegister = "Re-register";
notRegistered = "Not registered";
registered = "Registered";
icloudHeader = "Notification messages will sync when iCloud is available";
icloudBody = "iCloud sync";
badgeModeTitle = "Badge Mode";
badgeHeader = "Push badge mode, click to modify, long press to clear badge";
baddgeFooter = "Auto: Unread count, Custom: According to URL parameters";

exportHeader = "Export message list";
exportTitle = "Export";
exportFail = "Export failed";
exportSuccess = "Export successful";
allSounds = "All sounds";

someMessageCount = "%d messages";
deviceTokenHeader = "Apple device push token, do not disclose";
copySuccessText = "Copy successful";
needRegister = "Please register first";
commonProblem = "Common problems";
otherHeader = "Other";
useHelpTitle = "Usage Help";

opened = "Opened";
notopen = "Not opened";

autoModeNotClear = "Auto mode cannot clear";
clearSuccess = "Clear successful";

groupMessageMode = "Group mode";
defaultMessageMode = "Default mode";

deleteTimeMessage = "Delete messages from the following time";
messageModeChanged = "Message status changed";
markNotRead = "Mark as unread";
markRead = "Mark as read";
deleteTitle = "Delete";

nothing = "Nothing";
notread = "Unread";
deleteMessageGroup = "Delete group";
groupMarkRead = "Group read";
nothingMessage = "No messages";
deleteAllMessage = "Delete all messages";
allMarkRead = "All read";
deleteSuccess = "Delete successful";
deleteFail = "Delete Fail";
defultGroup = "Info";

changeServer = "Switch server";
useExample = "Usage example";


pushExampleHeader0 = "Example 1";
pushExampleFooter0 = "Click the button in the top right corner to copy the test URL and preview the push notification.\nSafari has a cache, so please refresh the page if you don't receive the push notification.";
pushExampleTitle0 = "Push Content";
pushExampleParams0 = "Push Content";

pushExampleHeader1 = "Example 2";
pushExampleFooter1 = "The font size of the push title is slightly larger than the push content.";
pushExampleTitle1 =  "Title + Content";
pushExampleParams1 = "Title/Content";

pushExampleHeader2 = "Click the headphones icon in the top right to view all ringtones";
pushExampleFooter2 = "You can set different ringtones for the push notification.";
pushExampleTitle2 =  "Push Sound";
pushExampleParams2 = "Push Content?sound=minuet";

pushExampleHeader3 = "Requires iOS 15 or above";
pushExampleFooter3 = "You can customize the icon with icon=https://image-url";
pushExampleTitle3 = "Custom Icon";
pushExampleParams3 = "Push Content?icon=warn";

pushExampleHeader4 = "Automatically cached, viewable both inside and outside the app";
pushExampleFooter4 = "Includes an image";
pushExampleTitle4 = "Includes Image";
pushExampleParams4 = "?title=title&body=body&image=https://day.app/assets/images/avatar.jpg";

pushExampleHeader5 = "Only viewable in message notification, not automatically cached";
pushExampleFooter5 = "Includes a video, auto-play on click";
pushExampleTitle5 = "Includes Video";
pushExampleParams5 = "?title=title&body=body&video=https://sf1-cdn-tos.huoshanstatic.com/obj/media-fe/xgplayer_doc_video/mp4/xgplayer-demo-360p.mp4";

pushExampleHeader6 = "";
pushExampleFooter6 = "To use this parameter, the badge mode in settings needs to be set to custom";
pushExampleTitle6 =  "Custom Badge";
pushExampleParams6 = "Custom Badge?badge=1";

pushExampleHeader7 = "Auto Save";
pushExampleFooter7 = "Messages are saved by default, unless they carry isArchive=0, in which case they won't appear in the foreground";
pushExampleTitle7 = "Do Not Save Message";
pushExampleParams7 = "Push Content?isArchive=0";

pushExampleHeader8 = "URLScheme or Website";
pushExampleFooter8 = "Click to open the app";
pushExampleTitle8 = "Open Third-party App or Website";
pushExampleParams8 = "Push Content?icon=weixin&url=weixin://";

pushExampleHeader9 = "Default Group Name: Information";
pushExampleFooter9 = "The push notification will be grouped and displayed in the notification center and within the app based on the group parameter.";
pushExampleTitle9 = "Push Notification Grouping";
pushExampleParams9 = "Push Notification Grouping?group=test";

pushExampleHeader10 = "Continuous Ringing";
pushExampleFooter10 = "The notification sound will play continuously for 30 seconds. If multiple notifications are received, they will ring sequentially.";
pushExampleTitle10 =  "Continuous Ringing";
pushExampleParams10 = "Continuous Ringing?call=1";

pushExampleHeader11 = "You can set the interruption level for notifications";
pushExampleFooter11 = "Optional parameter values:\nactive: Default value, the system will immediately light up the screen to show the notification.\ntimeSensitive: Time-sensitive notification, can be displayed during Focus mode.\npassive: Only added to the list, will not light up the screen.";
pushExampleTitle11 =  "Time-Sensitive Notification";
pushExampleParams11 = "Time-Sensitive Notification?level=timeSensitive";

pushExampleHeader12 = "Requires configuration in Settings > Algorithm Settings";
pushExampleFooter12 = "Encrypts and decrypts push content during sending and receiving.";
pushExampleTitle12 = "Push Encryption";
pushExampleParams12 = "?ciphertext=Encrypted Data";



updateSuccess = "Update Completed";
addNewServerList = "Add New Server";
newaddServer = "Newly Add Server";
recoverDefaultServer = "Restore Default Server";
serverList = "Server List";
addSuccess = "Addition Successful";
serverExist = "Server Already Exists";

addNewServerListAddress = "Add New Server Address";
inputServerAddress = "Enter Server Address";
verifyFail = "Verification Failed";
addTitle = "Add";
online = "Online";
offline = "Offline";
serverOnlineFooter = "Swipe left to delete, swipe right to check registration status";

serverName = "Server";
registerAndCheck = "Register/Check";
needOneServer = "Must Keep at Least One Service";

groupModeName = "Group";
allModeName = "All";

hourAgo = "One hour ago";
dayAgo = "One day ago";
weekAgo = "One week ago";
monthAgo = "One month ago";
allTime = "All Time";


copyTitle = "CopyAndClose";


messageExampleTitle1 = "Example";
messageExampleGroup1 = "Example";
messageExampleBody1 = "Click or swipe to modify the message status.";


messageExampleTitle3 = "Click to open other app";
messageExampleGroup3 = "App";
messageExampleBody3 = "The 'url' attribute can open URL Schemes. Clicking on the notification message will automatically navigate. Receiving messages while the app is in the foreground will also trigger automatic navigation.";

settingNetWorkHeader = "You must enable network access to use the service";
settingNetWorkTitle = "Network permissions not enabled";
openSetting = "Open Settings";
notificationHeader = "You must enable notifications to use this service";
notificationTitle = "Notification permissions not enabled";
openNotification = "Open Permissions";

checkServerDeploy = "Check Server Deployment Tutorial";

buildDesc = "Meoworld uses GitHub Actions to build and publish itself to the App Store. You can verify the ‘run_id’ in the URL to ensure Bark was built from its original open-source codebase.";


AppIconTitle = "App Icon";
AppIconTips = "Click to modify the default app icon";
switchError = "Switching is temporarily unavailable";



mailTestTips = "Subject includes: Meoworld";

mailHeader = "Email triggers the shortcut to run";

mailTitle = "Automation configuration";

toMailTestTitle = "Automation: Meoworld";

toMailTestText = "{title:\"Title\",...}";

sendMailFail = "Invocation failed";

sendMailSuccess = "Invocation succeeded";

sendMailTestBtn = "Test";

emailConfigHeader = "Email server configuration, localized service";

emailPasswordPl = "Please enter password";

tomailListHeader = "Recipient email list";

emailNavigationTitle = "Email Automation";

getFail = "Get Fail";


cloudData = "Cloud Data";

notData = "Not Data!";

deleteAll = "Del All";

resetKey = "Reset Key";


failUrl = "Wrong Url";
failSave = "Save Failed";
failAuth = "Please Enable Album Permissions";
saveSuccess = "Save Successful";
failOther = "Other Error";


doubleClickSave = "Double Click to Save";


requestFail = "Request Failed";
signTitle = "Email Key";
signSubTitle = "change key with email";
signHelp = "Don't know how to get started? Get Help";
signRetry = "Retry";
signPhoneInput = "Enter your Email";
signCodeInput = "Enter the verification code";
signGetCode = "Get Verification Code";


serverConfig = "Configure/Modify Server";

changeTipsTitle = "Irreversible Operation!";

changeTips1SubTitle = "Are you sure you want to delete all unread messages?";

changeTips2SubTitle = "Are you sure you want to delete all read messages?";

readAllQuickAction = "Mark All as Read";
delReadAllQuickAction = "Delete All Read";
delNotReadAllQuickAction = "Delete All Unread";


faqUrl = "https://alarmpaw.twown.com/#/faq";
docUrl = "https://alarmpaw.twown.com/#/?id=alarmpaw";
encryptionUrl = "https://alarmpaw.twown.com/#/encryption";
deployUrl = "https://alarmpaw.twown.com/#/deploy";
documentation = "Documentation";
ivComment = "The IV can be randomly generated, but if it is, it needs to be passed in the 'iv'; parameter.";
opensslEncodingComment = "OpenSSL requires the input Key and IV to be in hexadecimal encoding.";
ciphertextComment = "The ciphertext may contain special characters, so remember to URL encode it.";
consoleComment = "The console will print";
keyComment = "Must be %d bits";


cryptoConfigAlgorithm = "Algorithm";
cryptoConfigMode = "Mode";
cryptoConfigKey = "Enter key with %d digits";
cryptoConfigIv = "Enter 16-digit Iv";
cryptoConfigCopyTitle = "Copy Python sending script";
cryptoConfigNavTitle = "Algorithm Config";
cryptoConfigSuccess = "Verification Successful";
cryptoConfigVerify = "Verify";
cryptoConfigKeyFail = "Incorrect Key parameter length";
cryptoConfigIvFail = "Incorrect Iv parameter length";
cryptoConfigParamsFail = "Incomplete parameters";
configTitle = "Config";

badgeAuto = "Auto";
badgeCustom = "Custom";


scanViewFailAdress = "Invalid address";
scanViewAnewScan = "Rescan";

paramsError = "Url Error;";


musicConfigList = "Ringtone Settings";
customRing = "Custom Ringtone，swipe right to set as default.";
uploadRing = "Upload Ringtone";
ringTextHead = "Please convert the ringtone";
ringTextBody = "to caf format";
ringTextFooter = "with a duration not exceeding 30 seconds.";
systemRing = "Ringtones, swipe right to set as default.";


musicLong30 = "Max 30 sec";
 
findMessageCount = "Found %1$d records";




defaultGroup = "Def";

startUse = "Home Page";


contactMe = "Contact me";


editingtips = "Unedited state";


replaceKeyWithMail = "Change Key";


notificationAndNetwork = "open Net And Noti";

defaultSave = "Archive by Default";
archiveNote = "Archive notifications by default if the 'isArchive' parameter is unset.";



firstStartTitle = "Allow Necessary Permissions";
firstStartHeader = "Tips 1";
firstStartContent = "Without notification permissions, the app will not function";

firstStartTitle1 = "Multiple Tweeting Methods";
firstStartHeader1 = "Tips 2";
firstStartContent1 = "You can simply enter the URL in the browser or use any known program script";

firstStartTitle2 = "Automate Processes";
firstStartHeader2 = "Tips 3";
firstStartContent2 = "Combine with email configuration to automatically execute a function upon receiving a message";

firstStartTitle3 = "Private Server Support";
firstStartHeader3 = "Tips 4";
firstStartContent3 = "Customize your server for more secure message transmission!";

historyImage = "History";


closeTitle = "Close Message";
detailTitle = "View Details";

submitBtn = "Submit";
cancelBtn = "Cancel";



photoAlbumName = "Album Name";
selectBtn = "Select";
selectAll = "Select All";
cancelSelectAll = "Deselect All";
imageName = "Image";
selectImageCount = "%d images selected";
selectImage = "Select Image";
dangerHandler = "Dangerous Operation!";
deleteImageCount = "Delete %d images. This action cannot be undone!";
saveImages = "Save Images";
saveImageCountImageNamePhoto = "Save %1$d images to the %2$@ album";
